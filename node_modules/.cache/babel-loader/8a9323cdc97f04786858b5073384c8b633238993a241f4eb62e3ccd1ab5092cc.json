{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst itemSlice = createSlice({\n  name: \"item\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceItem(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.itemId === newItem.id);\n      /**리덕스 tollkit은 proxy기반이므로 저장값을 확인하기 위해서는 current를 사용해야 한다. */\n      //   console.log(\"existingItem\", current(state.items));\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      console.log(state.items);\n      const existingItem = state.items.find(item => {\n        return item.itemId === id;\n      });\n      state.totalQuantity--;\n      console.log(existingItem);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.itemId !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport const itemActions = itemSlice.actions;\nexport default itemSlice;","map":{"version":3,"names":["createSlice","require","itemSlice","name","initialState","items","totalQuantity","reducers","replaceItem","state","action","payload","addItem","newItem","existingItem","find","item","itemId","id","push","price","quantity","totalPrice","title","removeItem","console","log","filter","itemActions","actions"],"sources":["/Users/choehyeon-u/Desktop/coding/개인프로젝트/React/Redux심화/src/store/cart-slice.js"],"sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst itemSlice = createSlice({\n  name: \"item\",\n  initialState: { items: [], totalQuantity: 0 },\n  reducers: {\n    replaceItem(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(\n        (item) => item.itemId === newItem.id\n      );\n      /**리덕스 tollkit은 proxy기반이므로 저장값을 확인하기 위해서는 current를 사용해야 한다. */\n      //   console.log(\"existingItem\", current(state.items));\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      console.log(state.items);\n      const existingItem = state.items.find((item) => {\n        return item.itemId === id;\n      });\n      state.totalQuantity--;\n      console.log(existingItem);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.itemId !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    },\n  },\n});\n\nexport const itemActions = itemSlice.actions;\n\nexport default itemSlice;\n"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEnD,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,aAAa,EAAE;EAAE,CAAC;EAC7CC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACH,aAAa,GAAGI,MAAM,CAACC,OAAO,CAACL,aAAa;MAClDG,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO,CAACN,KAAK;IACpC,CAAC;IAEDO,OAAOA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAClCC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKJ,OAAO,CAACK,EAAE,CACrC;MACD;MACA;MACAT,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACQ,YAAY,EAAE;QACjBL,KAAK,CAACJ,KAAK,CAACc,IAAI,CAAC;UACfF,MAAM,EAAEJ,OAAO,CAACK,EAAE;UAClBE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBjB,IAAI,EAAEU,OAAO,CAACU;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,IAAIT,OAAO,CAACO,KAAK;MAC1C;IACF,CAAC;IACDI,UAAUA,CAACf,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMQ,EAAE,GAAGR,MAAM,CAACC,OAAO;MACzBc,OAAO,CAACC,GAAG,CAACjB,KAAK,CAACJ,KAAK,CAAC;MACxB,MAAMS,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAK;QAC9C,OAAOA,IAAI,CAACC,MAAM,KAAKC,EAAE;MAC3B,CAAC,CAAC;MACFT,KAAK,CAACH,aAAa,EAAE;MACrBmB,OAAO,CAACC,GAAG,CAACZ,YAAY,CAAC;MACzB,IAAIA,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC/BZ,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACsB,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKC,EAAE,CAAC;MAChE,CAAC,MAAM;QACLJ,YAAY,CAACO,QAAQ,EAAE;MACzB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAG1B,SAAS,CAAC2B,OAAO;AAE5C,eAAe3B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}